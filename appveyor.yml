version: 1.3.{build}
 
environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      PAHO_WINDOWS_BUILD_BIT: x64
      OPENSSL_ROOT_DIR: "C:/myOpenSSL"
      PAHO_BUILD_STATIC: FALSE
      PAHO_BUILD_SHARED: TRUE
      PAHO_HIGH_PERFORMANCE: TRUE
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PAHO_WINDOWS_BUILD_BIT: x64
      OPENSSL_ROOT_DIR: "C:/myOpenSSL"
      PAHO_BUILD_STATIC: FALSE
      PAHO_BUILD_SHARED: TRUE
      PAHO_HIGH_PERFORMANCE: TRUE
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PAHO_WINDOWS_BUILD_BIT: x64
      OPENSSL_ROOT_DIR: "C:/myOpenSSL"
      PAHO_BUILD_STATIC: FALSE
      PAHO_BUILD_SHARED: TRUE
      PAHO_HIGH_PERFORMANCE: TRUE
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PAHO_WINDOWS_BUILD_BIT: x64
      OPENSSL_ROOT_DIR: "C:/myOpenSSL"
      PAHO_BUILD_STATIC: FALSE
      PAHO_BUILD_SHARED: TRUE
      PAHO_HIGH_PERFORMANCE: TRUE
    
configuration: Debug
install:
  - cmd: ver
  - appveyor DownloadFile https://slproweb.com/download/Win64OpenSSL-3_0_5.exe
  - Win64OpenSSL-3_0_5.exe /silent /verysilent /sp- /suppressmsgboxes /DIR=C:\myOpenSSL
  - cmd: openssl version

build_script:
- cmd: >-
    mkdir build.paho

    cd build.paho

    echo %APPVEYOR_BUILD_WORKER_IMAGE%

    if "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2019" call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" %PAHO_WINDOWS_BUILD_BIT%
    
    if "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2017" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" %PAHO_WINDOWS_BUILD_BIT%

    if "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2015" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %PAHO_WINDOWS_BUILD_BIT%

    if "%APPVEYOR_BUILD_WORKER_IMAGE%" == "Visual Studio 2013" call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" %PAHO_WINDOWS_BUILD_BIT%

    cmake -G "NMake Makefiles" -DPAHO_WITH_SSL=TRUE -DOPENSSL_ROOT_DIR=%OPENSSL_ROOT_DIR% -DPAHO_BUILD_DOCUMENTATION=FALSE -DPAHO_BUILD_SAMPLES=TRUE -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=TRUE -DPAHO_BUILD_STATIC=%PAHO_BUILD_STATIC% -DPAHO_BUILD_SHARED=%PAHO_BUILD_SHARED% -DPAHO_HIGH_PERFORMANCE=%PAHO_HIGH_PERFORMANCE% ..

    nmake

    cd ..

after_build:
- cmd: >-
    set ZIPNAME=eclipse-paho-mqtt-c-windows.zip 

    7z a %ZIPNAME% build.paho\src\*as.dll

    7z a %ZIPNAME% build.paho\src\*as.lib

    7z rn %ZIPNAME% build.paho\src lib

    7z a %ZIPNAME% src\MQTTClient.h src\MQTTAsync.h src\MQTTClientPersistence.h src\MQTTProperties.h src\MQTTReasonCodes.h src\MQTTSubscribeOpts.h src\MQTTExportDeclarations.h

    7z rn %ZIPNAME% src include
    
    7z a %ZIPNAME% C:\myOpenSSL\bin\libssl-3-x64.dll
    
    7z a %ZIPNAME% C:\myOpenSSL\bin\libcrypto-3-x64.dll

artifacts:
- path: eclipse-paho-mqtt-c-windows.zip
  name: paho-mqtt-c

